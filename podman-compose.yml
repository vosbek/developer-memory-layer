version: '3.8'

services:
  # Frontend
  frontend:
    build: .
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:4000
    depends_on:
      - api-gateway
    volumes:
      - .:/app
      - /app/node_modules

  # API Gateway
  api-gateway:
    build: ./backend/api-gateway
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/memory_layer
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key
      - NODE_ENV=development
    depends_on:
      - db
      - redis
      - memory-service
      - search-service

  # Memory Service
  memory-service:
    build: ./backend/memory-service
    ports:
      - "4001:4001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/memory_layer
      - REDIS_URL=redis://redis:6379
      - NODE_ENV=development
    depends_on:
      - db
      - redis

  # Search Service
  search-service:
    build: ./backend/search-service
    ports:
      - "4002:4002"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/memory_layer
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - NODE_ENV=development
    depends_on:
      - db

  # Integration Service
  integration-service:
    build: ./backend/integration-service
    ports:
      - "4003:4003"
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/memory_layer
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - JIRA_API_TOKEN=${JIRA_API_TOKEN}
      - NODE_ENV=development
    depends_on:
      - db

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=memory_layer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # pgAdmin (Database Management)
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data: